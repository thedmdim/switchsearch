Directory structure:
└── /./
    ├── popup/
    │   ├── popup.js
    │   ├── popup.html
    │   └── popup.css
    ├── shared/
    │   └── search-engines.js
    └── manifest.json

================================================
File: /popup/popup.js
================================================
import searchEngines from "../shared/search-engines.js";


let initialized = false
document.addEventListener("DOMContentLoaded", async () => {

    if (initialized) {
        let selected = await browser.storage.local.get("selectedSearchEngine")
        let inputs = document.getElementsByTagName("input")
        Array.from(inputs).forEach(input => { input.checked = input.value == selected.selectedSearchEngine })
    } else {
        initPopup();
        initialized = true
    }
});


function initPopup() {
    const [fieldset] = document.getElementsByTagName("fieldset");
    searchEngines.forEach((se) => {
        se.parsedURL = new URL(se.url)
        let params = Array.from(se.parsedURL.searchParams.keys())
        if (params.length == 1) {
            se.q = params[0]
        } else {
            console.error("more than 1 q param in searchEngines item")
        }

        const label = document.createElement("label");
        label.style.display = "block";

        const input = document.createElement("input");
        
        input.type = "radio"
        input.name = "search-engine"
        input.value = se.name
        if (se.name == browser.storage.local.get("selectedSearchEngine")) {
            input.checked = true
        }
        
        label.appendChild(input)
        label.innerHTML += se.name
        fieldset.appendChild(label);
    });

    fieldset.addEventListener("change", async (event) => {
        if (event.target.name === "search-engine") {
            const [currTab] = await browser.tabs.query({ active: true, currentWindow: true });
            const currURL = new URL(currTab.url);
            const currSearch = searchEngines.find(se => se.parsedURL.hostname == currURL.hostname && (currURL.pathname == "/" || se.parsedURL.pathname == currURL.pathname))
            
            let newSearch = searchEngines.find(se => se.name == event.target.value)

            if (typeof currSearch === "undefined") {
                browser.tabs.create( { url: newSearch.parsedURL.protocol + newSearch.parsedURL.hostname } )
            } else {
                let currSeachQuery = currURL.searchParams.get(currSearch.q)
                if (currSeachQuery) {
                    newSearch.parsedURL.searchParams.set(newSearch.q, currSeachQuery)
                    browser.tabs.update(currTab.id, { url: newSearch.parsedURL.href });
                } else {
                    browser.tabs.update(currTab.id, { url: newSearch.parsedURL.protocol + newSearch.parsedURL.hostname });  
                }
            }

            browser.storage.local.set({"selectedSearchEngine": newSearch.name})
            console.log(await browser.storage.local.get())
            fieldset.innerHTML += initialized
        }
    });
}

================================================
File: /popup/popup.html
================================================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="popup.css">
    <title>Search Switcher</title>
</head>
<body>
    <fieldset>
        <legend>SwitchSearch</legend>
    </fieldset>
    <script type="module" src="popup.js"></script>
</body>
</html>


================================================
File: /popup/popup.css
================================================
body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 10px;
  width: 200px;
  background-color: #f5faff;
}

#popup-container {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

legend {
  background-color: #709AD3;
  color: #FFF203;
  font-weight: bold;
}


label {
  margin: 5px 0;
  cursor: pointer;
}

input[type="radio"] {
  margin-right: 5px;
}



================================================
File: /shared/search-engines.js
================================================
const searchEngines = [
  { name: "Google", url: "https://www.google.com/search?q=" },
  { name: "Brave", url: "https://search.brave.com/search?q=" },
  { name: "Yandex", url: "https://ya.ru/search/?text=" },
];

export default searchEngines;


================================================
File: /manifest.json
================================================
{
  "manifest_version": 3,
  "name": "Search Engine Switcher",
  "version": "1.0",
  "description": "Quickly switch between search engines from the search results page.",
  "permissions": ["tabs", "storage"],
  "action": {
    "default_popup": "popup/popup.html",
    "default_icon": {
      "16": "icon.png",
      "48": "icon.png",
      "128": "icon.png"
    }
  },

  "icons": {
    "16": "icon.png",
    "48": "icon.png",
    "128": "icon.png"
  }
}



